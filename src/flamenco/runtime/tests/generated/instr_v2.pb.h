/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_FD_V2_INSTR_V2_PB_H_INCLUDED
#define PB_FD_V2_INSTR_V2_PB_H_INCLUDED

#include "../../../nanopb/pb_firedancer.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct fd_v2_instr_acct {
    uint32_t index;
    bool is_writable;
    bool is_signer;
} fd_v2_instr_acct_t;

/* As a note, the accounts and account data fields are populated at a higher
level than the instruction. */
typedef struct fd_v2_instr_env {
    /* Index into the set of txn accounts defined by the TxnEnv. */
    uint32_t program_id_idx;
    /* Indexes into the set of txn accounts defined by the TxnEnv. */
    pb_size_t accounts_count;
    uint32_t *accounts;
    /* The instruction data */
    pb_bytes_array_t *data;
} fd_v2_instr_env_t;

typedef struct fd_v2_instr_effects {
    /* Result of the instruction execution */
    int32_t result;
    /* Custom error code if applicable */
    int32_t custom_err;
} fd_v2_instr_effects_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define FD_V2_INSTR_ACCT_INIT_DEFAULT            {0, 0, 0}
#define FD_V2_INSTR_ENV_INIT_DEFAULT             {0, 0, NULL, NULL}
#define FD_V2_INSTR_EFFECTS_INIT_DEFAULT         {0, 0}
#define FD_V2_INSTR_ACCT_INIT_ZERO               {0, 0, 0}
#define FD_V2_INSTR_ENV_INIT_ZERO                {0, 0, NULL, NULL}
#define FD_V2_INSTR_EFFECTS_INIT_ZERO            {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define FD_V2_INSTR_ACCT_INDEX_TAG               1
#define FD_V2_INSTR_ACCT_IS_WRITABLE_TAG         2
#define FD_V2_INSTR_ACCT_IS_SIGNER_TAG           3
#define FD_V2_INSTR_ENV_PROGRAM_ID_IDX_TAG       1
#define FD_V2_INSTR_ENV_ACCOUNTS_TAG             2
#define FD_V2_INSTR_ENV_DATA_TAG                 3
#define FD_V2_INSTR_EFFECTS_RESULT_TAG           1
#define FD_V2_INSTR_EFFECTS_CUSTOM_ERR_TAG       2

/* Struct field encoding specification for nanopb */
#define FD_V2_INSTR_ACCT_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   index,             1) \
X(a, STATIC,   SINGULAR, BOOL,     is_writable,       2) \
X(a, STATIC,   SINGULAR, BOOL,     is_signer,         3)
#define FD_V2_INSTR_ACCT_CALLBACK NULL
#define FD_V2_INSTR_ACCT_DEFAULT NULL

#define FD_V2_INSTR_ENV_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   program_id_idx,    1) \
X(a, POINTER,  REPEATED, UINT32,   accounts,          2) \
X(a, POINTER,  SINGULAR, BYTES,    data,              3)
#define FD_V2_INSTR_ENV_CALLBACK NULL
#define FD_V2_INSTR_ENV_DEFAULT NULL

#define FD_V2_INSTR_EFFECTS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    result,            1) \
X(a, STATIC,   SINGULAR, INT32,    custom_err,        2)
#define FD_V2_INSTR_EFFECTS_CALLBACK NULL
#define FD_V2_INSTR_EFFECTS_DEFAULT NULL

extern const pb_msgdesc_t fd_v2_instr_acct_t_msg;
extern const pb_msgdesc_t fd_v2_instr_env_t_msg;
extern const pb_msgdesc_t fd_v2_instr_effects_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define FD_V2_INSTR_ACCT_FIELDS &fd_v2_instr_acct_t_msg
#define FD_V2_INSTR_ENV_FIELDS &fd_v2_instr_env_t_msg
#define FD_V2_INSTR_EFFECTS_FIELDS &fd_v2_instr_effects_t_msg

/* Maximum encoded size of messages (where known) */
/* fd_v2_InstrEnv_size depends on runtime parameters */
#define FD_V2_INSTR_ACCT_SIZE                    10
#define FD_V2_INSTR_EFFECTS_SIZE                 22
#define FD_V2_INSTR_V2_PB_H_MAX_SIZE             FD_V2_INSTR_EFFECTS_SIZE

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
